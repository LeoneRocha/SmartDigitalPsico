  ### STAGE 1: Build ###  esponsável por gerar o build da nossa aplicação  
FROM node:18 as node
WORKDIR /app
COPY . .
RUN npm install  --force
RUN npm run build --prod

### ESTÁGIO 2: Executar ###   2 - Responsável por expor nossa aplicação smartdigitalpsico *  based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:latest 
## Skip this if you are using kubernetes config map 
COPY nginx.conf /etc/nginx/nginx.conf
## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder
COPY --from=node /app/dist/smartdigitalpsico /usr/share/nginx/html
  
EXPOSE 4209
## Serve
CMD ["nginx", "-g", "daemon off;"]



worker_processes 1;

events { worker_connections 1024; }

# HTTP server
http {
  server {
    # Porta que a aplicação Angular está exposta
    listen 4209;

    root /usr/share/nginx/html;
    index index.html index.htm;
    include       /etc/nginx/mime.types;
    # Angular application
    location / {
      try_files $uri $uri/ /index.html; 
    } 
    # API backend     https://medium.com/@anasecn/how-to-serve-an-angular-app-with-node-js-api-on-a-nginx-server-ca59de51850
    #https://dev.to/___bn___/serve-a-single-page-application-along-with-its-backend-api-thanks-to-nginx-reverse-proxy-2h5c
    #https://www.youtube.com/watch?v=t6khLJDZTyQ
    location /api {     
        proxy_pass https://localhost:61949;   
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #proxy_pass https://localhost:61949; #porta da sua aplicação express/nodejs # Endereço do serviço da API 
    }
  }
} 


version: '3.4' 
services:
  smartdigitalpsicoweb:
    container_name: smartdigitalpsicowebui
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "4209:4209"
    restart: always
    volumes:
      - ./dist/smartdigitalpsico/:/usr/share/nginx/html
    command: nginx -g 'daemon off;'
    networks:
      - smartdigitalpsiconetwork
networks:
  smartdigitalpsiconetwork:
    driver: bridge

  location /api { 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_pass https://localhost:59875;
    } 